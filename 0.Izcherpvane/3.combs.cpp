/*
Хакера DarkGraph решил да проникне в сървъра на своя приятел Ламерко. Ламерко не държал на
сигурността си толкова много затова редовно си слагал за парола някаква поредица от цифри с
различна дължина. Помогнете на DarkGraph като напишете програма, която генерира подходящи
комбинации за разбиване на паролата на Ламерко.

Вход
На първия ред са дадени две числа: N - дължината на паролата (броя символи), K - максималното
число, което може да присъства в кода т.е. цифрите в паролата могат да са от 1 до К

Изход
Всички възможни пароли

Пример #1
	Вход
	3 2

	Изход
	1 1 1
	1 1 2
	1 2 1
	1 2 2
	2 1 1
	2 1 2
	2 2 1
	2 2 2

*/

#include <iostream>
#include <fstream>
using namespace std;

int n, k, a[16];

void combs(int pos)
{
	if(pos == n){
		for(int j = 0; j < n; j++)
			cout << a[j]+1 <<' ';
		cout << endl;

		return;
	}

	for(int i = 0; i < k; i++){
		a[pos] = i;
		combs(pos+1);
	}

	return;
}

int main(){

	cin >> n >> k;

	combs(0);

	return 0;
}

/*
Домашно:

На ред с N (1 <= N <= 13) клетки са разположени мини. За някои клетки са известни колко мини са в
него и неговите съседи (вляво и вдясно). Напишете програма, която преброява начините за разположение на мините в
клетките на реда. Ако разположението на мините може да бъде еднозначно определено да се отпечата.

Входни данни
На първия ред на входа се въвежда N - дължината на реда. На следващия ред се изброяват за всяка клетка
 броя мини в предишната, текущата, в следващата. Ако нищо не се знае за клетката, вместо броя на
 мините е написано -1.

Изходни данни
На първия ред се извежда броя на подрежданията, които отговарят на описанието. Ако подреждането е еднозначно определено
да се отпечата подреждането като 0 показва, че няма мина и 1 показва, че има мина.

Пример #1
	Вход
	4
	0 -1 -1 1

	Изход
	2

Пример #2

	Вход
	3
	1 2 1

	Изход
	1
	1 0 1

*/